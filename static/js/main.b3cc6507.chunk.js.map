{"version":3,"sources":["components/Encryption.js","components/EncryptCreateKeys.js","App.js","serviceWorker.js","index.js"],"names":["openpgp","require","$","window","Encryption","props","state","pubDisabled","privDisabled","encryptedData","decryptedData","input","key","this","setState","className","type","onPaste","handleChange","bind","onChange","placeholder","langPublicKey","aria-describedby","disabled","id","onClick","handlePubClick","langSave","langPrivateKey","handlePrivClick","initWorker","path","unArmoredKeyNoSpace","substr","replace","unArmoredTextNoSpace","trim","armoredMsg","privateKeyArmored","readArmored","keys","privateKey","message","privateKeys","decrypt","decrypted","data","console","log","publicKeyArmored","fromText","publicKeys","encrypt","encrypted","show","toString","e","target","value","handleClick","encryptData","decryptData","split","map","i","lang","disabledPubInput","disabledPrivInput","showResults","langMesssageTo","rows","textAreaClick","langEncrypt","langDecrypt","React","Component","EncryptCreateKeys","pubKey","privKey","name","email","password","userIds","curve","passphrase","revocationCertificate","data-toggle","href","role","aria-expanded","aria-controls","langCreate","langKey","handleGameClik","createKeyPair","langGenerate","langOptions","langFillIn","langExpert","langName","langPassword","langKeepSafe","langCanShare","langLoading","App","langTitle","handleLangSwitch","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"0VAEMA,G,MAAUC,EAAQ,IAClBC,EAAIC,OAAOD,EA6OFE,E,kDA1OX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,aAAY,EACZC,cAAc,EACdC,cAAc,KACdC,cAAc,KACdC,MAAM,KACNC,IAAI,MARO,E,6DAWfC,KAAKC,SAAU,CAACP,aAAcM,KAAKP,MAAMC,gB,wCAGzCM,KAAKC,SAAU,CAACN,cAAeK,KAAKP,MAAME,iB,yCAG1C,OAAGK,KAAKP,MAAMC,YAEF,yBAAKQ,UAAU,oBACX,2BAAOC,KAAK,OACLC,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAWP,KAAKK,aAAaC,KAAKN,MAClCE,UAAU,eACVM,YAAaR,KAAKS,gBAClBC,mBAAiB,gBAAgBC,UAAQ,IAChD,yBAAKT,UAAU,qBAAqBU,GAAG,iBACnC,4BAAQV,UAAU,4BAA6BW,QAASb,KAAKc,eAAeR,KAAKN,OAAQA,KAAKe,cAMtG,yBAAKb,UAAU,oBACX,2BAAOC,KAAK,OACLC,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAWP,KAAKK,aAAaC,KAAKN,MAClCE,UAAU,eACVM,YAAaR,KAAKS,gBAClBC,mBAAiB,kBACxB,yBAAKR,UAAU,qBAAqBU,GAAG,iBACnC,4BAAQV,UAAU,4BAA6BW,QAASb,KAAKc,eAAeR,KAAKN,MAAOG,KAAK,UAAUH,KAAKe,gB,0CAOhI,OAAGf,KAAKP,MAAME,aAEN,yBAAKO,UAAU,oBAEX,2BAAOC,KAAK,OACLS,GAAG,oBACHR,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAUP,KAAKK,aAAaC,KAAKN,MACjCE,UAAU,eACVM,YAAaR,KAAKgB,iBAClBN,mBAAiB,gBAAgBC,UAAQ,IAChD,yBAAKT,UAAU,qBAAqBU,GAAG,iBACnC,4BAAQV,UAAU,4BAA6BW,QAASb,KAAKiB,gBAAgBX,KAAKN,MAAOG,KAAK,UAAUH,KAAKe,cAMrH,yBAAKb,UAAU,oBACX,2BAAOC,KAAK,OACLS,GAAG,oBACHR,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAUP,KAAKK,aAAaC,KAAKN,MACjCE,UAAU,eACVM,YAAaR,KAAKgB,iBAClBN,mBAAiB,kBACxB,yBAAKR,UAAU,qBAAqBU,GAAG,iBACnC,4BAAQV,UAAU,4BAA6BW,QAASb,KAAKiB,gBAAgBX,KAAKN,MAAOG,KAAK,UAAUH,KAAKe,gB,6LASnH5B,EAAQ+B,WAAW,CAACC,KAAM,sB,cAE1BC,EAAsBpB,KAAKP,MAAMM,IAAIsB,OAAO,GAAI,KAAKC,QAAQ,OAAQ,MACrEC,EAAuBvB,KAAKP,MAAMG,cAAc4B,OAAOH,OAAO,IAU9DI,EAAa,qGAEcF,EAE3BG,EATa,oHAGhBN,EAHgB,uCAYA,G,UAEgBjC,EAAQY,IAAI4B,YAAYD,G,wCAApDE,K,GAAOC,E,UAGkB1C,E,UACbA,EAAQ2C,QAAQH,YAAYF,G,gCAC9B,CAACI,G,MADdC,Q,KACAC,Y,qBAFoCC,Q,iCAA3BC,E,EAANC,KAIPlC,KAAKC,SAAS,CAACJ,cAAeoC,IAC9BjC,KAAKC,SAAS,CACVH,MAAO,GACPF,cAAe,K,kDAGnBuC,QAAQC,IAAR,M,iSAOMjD,EAAQ+B,WAAW,CAACC,KAAM,sB,cAG1BC,EAAsBpB,KAAKP,MAAMM,IAAIsB,OAAO,GAAI,KAAKC,QAAQ,OAAQ,MAErEe,EAAmB,kHAG7BjB,EAH6B,uCAKN,G,KAEKjC,E,KACXA,EAAQ2C,QAAQQ,SAAStC,KAAKP,MAAMI,cAAc2B,Q,UACxCrC,EAAQY,IAAI4B,YAAYU,G,2BAAmBT,KAAK,G,MADnEE,Q,KACAS,W,qBAF4BC,Q,wBAA1BC,E,OAINzC,KAAKC,SAAS,CAACL,cAAe6C,EAAUP,OACxClC,KAAKC,SAAS,CACVH,MAAO,GACPD,cAAe,K,kDAInBR,EAAE,UAAUqD,OACZP,QAAQC,IAAI,KAAEO,Y,mJAGTC,GACQ,kBAAdA,EAAEC,OAAOjC,IAAuC,KAAjBgC,EAAEC,OAAOC,MACvC9C,KAAKC,SAAS,CAAEH,MAAO8C,EAAEC,OAAOC,QACb,sBAAdF,EAAEC,OAAOjC,IAA2C,KAAjBgC,EAAEC,OAAOC,MACjD9C,KAAKC,SAAS,CAACF,IAAI6C,EAAEC,OAAOC,QAE5BX,QAAQC,IAAI,gB,kCAGRQ,GAEY,YAAjBA,EAAEC,OAAOC,MACR9C,KAAKC,SAAS,CAACL,cAAcI,KAAKP,MAAMK,QAClB,YAAjB8C,EAAEC,OAAOC,MACd9C,KAAKC,SAAS,CAACJ,cAAcG,KAAKP,MAAMK,QAExCqC,QAAQC,IAAI,gB,oCAGNQ,GACU,YAAjBA,EAAEC,OAAOC,OAAsC,OAAnB9C,KAAKP,MAAMK,OAA+B,OAAjBE,KAAKP,MAAMM,KAC/DC,KAAK+C,YAAYH,GACjB5C,KAAKgD,eACiB,YAAjBJ,EAAEC,OAAOC,OAAsC,OAAnB9C,KAAKP,MAAMK,OAA+B,OAAjBE,KAAKP,MAAMM,KACrEC,KAAK+C,YAAYH,GACjB5C,KAAKiD,eAELd,QAAQC,IAAI,gB,oCAKhB,GAAsB,KAAnBpC,KAAKP,MAAMK,MAAW,CACrB,GAA8B,KAA3BE,KAAKP,MAAMG,cACV,OAAQ,yBAAKM,UAAU,MAAK,+BAAQF,KAAKP,MAAMI,cAAcqD,MAAM,MAAMC,KAAI,SAACC,EAAErD,GAAS,OAAO,yBAAKA,IAAKA,GAAMqD,QAC9G,GAA8B,KAA3BpD,KAAKP,MAAMI,cAChB,OAAQ,yBAAKK,UAAU,MAAK,+BAAQF,KAAKP,MAAMG,cAAcsD,MAAM,MAAMC,KAAI,SAACC,EAAErD,GAAS,OAAO,yBAAKA,IAAKA,GAAMqD,W,sCAKxH,MAAyB,OAAlBpD,KAAKR,MAAM6D,KAAY,aAAa,oB,uCAG3C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,cAAc,qB,iCAI5C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,OAAO,W,oCAGrC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,UAAU,Y,oCAGxC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,UAAU,iB,uCAGxC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,2BAA2B,oC,+BAIzD,OACI,yBAAKnD,UAAU,aAEVF,KAAKsD,mBACLtD,KAAKuD,oBAELvD,KAAKwD,cACN,yBAAKtD,UAAU,cACX,8BAAUA,UAAU,eAAeK,SAAWP,KAAKK,aAAaC,KAAKN,MAAQQ,YAAaR,KAAKyD,iBAAmB7C,GAAG,gBAAgB8C,KAAK,MAC1I,yBAAKxD,UAAU,OACX,2BAAOA,UAAU,iCAAiCW,QAASb,KAAK2D,cAAcrD,KAAKN,MAAOG,KAAK,SAAS2C,MAAO9C,KAAK4D,gBACpH,2BAAO1D,UAAU,iCAAiCW,QAASb,KAAK2D,cAAcrD,KAAKN,MAAOG,KAAK,SAAS2C,MAAO9C,KAAK6D,uB,GAlOnHC,IAAMC,W,OCuKhBC,G,wDAtKX,WAAYxE,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTkB,UAAU,EACVsD,OAAO,GACPC,QAAQ,GACRC,KAAK,YACLC,MAAM,kBACNC,SAAS,IARE,E,6DAWfrE,KAAKC,SAAU,CAACU,UAAWX,KAAKP,MAAMkB,a,6JAGf,KAApBX,KAAKP,MAAMwE,O,iCAEiE9E,cAAoB,CAC3FmF,QAAS,CAAC,CAAEH,KAAMnE,KAAKP,MAAM0E,KAAMC,MAAOpE,KAAKP,MAAM2E,QACrDG,MAAM,OACNC,WAAYxE,KAAKP,MAAM4E,W,uBAHrB3C,E,EAAAA,kBAAmBW,E,EAAAA,iB,EAAkBoC,sBAM3CzE,KAAKC,SAAS,CAACiE,QAAQxC,IACvB1B,KAAKC,SAAS,CAACgE,OAAO5B,I,kBAEf,CAAC6B,QAAQxC,EAAkBuC,OAAO5B,I,QAEzCrC,KAAKC,SAAS,CAACgE,OAAO,KACtBjE,KAAKC,SAAS,CAACiE,QAAQ,K,uIAI3B,MAAyB,OAAlBlE,KAAKR,MAAM6D,KAAY,MAAM,W,sCAGpC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,aAAa,oB,uCAG3C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,cAAc,qB,qCAG5C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,WAAW,a,mCAGzC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,SAAS,a,qCAGvC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,YAAY,kB,qCAG1C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,YAAY,6B,oCAG1C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,UAAU,e,mCAE/BT,GACQ,SAAdA,EAAEC,OAAOjC,IAA8B,KAAjBgC,EAAEC,OAAOC,MAC9B9C,KAAKC,SAAS,CAAEkE,KAAMvB,EAAEC,OAAOC,QACZ,UAAdF,EAAEC,OAAOjC,IAA+B,KAAjBgC,EAAEC,OAAOC,MACrC9C,KAAKC,SAAS,CAACmE,MAAMxB,EAAEC,OAAOC,QACX,aAAdF,EAAEC,OAAOjC,IAAkC,KAAjBgC,EAAEC,OAAOC,MACxC9C,KAAKC,SAAS,CAACoE,SAASzB,EAAEC,OAAOC,QAEjCX,QAAQC,IAAI,gB,qCAIhB,MAAyB,OAAlBpC,KAAKR,MAAM6D,KAAY,WAAW,iB,iCAGzC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,OAAO,Q,mCAGrC,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,sCAAsC,8C,oCAGpE,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,iBAAiB,sB,mCAG/C,MAAyB,OAAlBrD,KAAKR,MAAM6D,KAAY,0BAA0B,oC,+BAEnD,IAAD,OACJ,OACI,yBAAKnD,UAAU,kBACX,2BACI,uBAAGA,UAAU,eAAewE,cAAY,WAAWC,KAAK,yBAAyBC,KAAK,SAASC,gBAAc,QAAQC,gBAAc,yBAAyB9E,KAAK+E,aAAjK,IAAgL/E,KAAKgF,UAArL,MAEJ,yBAAK9E,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,WAAWU,GAAG,yBACzB,yBAAKV,UAAU,0BAEX,uBAAG0E,KAAK,SAAS/D,QAAW,WAAK,EAAKoE,eAAe3E,KAAK,GAAM,EAAK4E,iBAAmBR,cAAY,WAAWxE,UAAU,+BAA+B2E,gBAAc,QAAQC,gBAAc,eAAeH,KAAK,iBAAiB3E,KAAKmF,eAAtO,IAAuPnF,KAAKgF,WAC5P,uBAAGJ,KAAK,SAAS/D,QAAWb,KAAKiF,eAAe3E,KAAKN,MAAO0E,cAAY,WAAWxE,UAAU,+BAA+B2E,gBAAc,QAAQC,gBAAc,iBAAiBH,KAAK,mBAAmB3E,KAAKoF,cAA9M,IAA8NpF,KAAKqF,cAGnO,yBAAKnF,UAAU,wCAAwCU,GAAG,kBACtD,2BAAIZ,KAAKsF,cACT,6BACA,2BAAOnF,KAAK,OACLC,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAWP,KAAKK,aAAaC,KAAKN,MAClCE,UAAU,wBACVM,YAAaR,KAAKuF,WACjB3E,GAAG,SACX,2BAAOT,KAAK,OACLC,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAWP,KAAKK,aAAaC,KAAKN,MAClCE,UAAU,wBACVM,YAAY,SACZI,GAAG,UACV,2BAAOT,KAAK,OACLC,QAASJ,KAAKK,aAAaC,KAAKN,MAChCO,SAAWP,KAAKK,aAAaC,KAAKN,MAClCE,UAAU,wBACVM,YAAaR,KAAKwF,eAClB5E,GAAG,cAId,uBAAGV,UAAiC,KAArBF,KAAKP,MAAMyE,QAAa,YAAY,IAAOlE,KAAKgB,iBAA/D,KAAmFhB,KAAKyF,eAAxF,OACA,yBAAKvF,UAAU,4BAA4BU,GAAG,gBAE1C,yBAAKV,UAAgC,MAApBF,KAAKP,MAAMyE,QAAc,GAAG,UACzC,yBAAKhE,UAAU,qBAAqB0E,KAAK,UACrC,0BAAM1E,UAAU,WAAhB,gBAIR,yBAAKA,UAAU,MAAK,+BAAQF,KAAKP,MAAMyE,QAAQhB,MAAM,MAAMC,KAAI,SAACC,EAAErD,GAAS,OAAO,yBAAKA,IAAKA,GAAMqD,SAGtG,uBAAGlD,UAAiC,KAArBF,KAAKP,MAAMyE,QAAa,YAAY,IAAOlE,KAAKS,gBAA/D,KAAkFT,KAAK0F,eAAvF,OACA,yBAAKxF,UAAU,4BAA4BU,GAAG,gBAE1C,yBAAKV,UAAgC,MAApBF,KAAKP,MAAMyE,QAAc,GAAG,UACzC,yBAAKhE,UAAU,qBAAqB0E,KAAK,UACrC,0BAAM1E,UAAU,WAAWF,KAAK2F,cAAhC,SAKR,yBAAKzF,UAAU,MAAK,+BAAQF,KAAKP,MAAMwE,OAAOf,MAAM,MAAMC,KAAI,SAACC,EAAErD,GAAS,OAAO,yBAAKA,IAAKA,GAAMqD,kB,GA/IrGU,IAAMC,YCuCvB6B,E,kDArCX,WAAYpG,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT4D,KAAM,MAHK,E,6DAMFT,GACb5C,KAAKC,SAAS,CAACoD,KAAuB,OAAlBrD,KAAKP,MAAM4D,KAAY,KAAK,S,kCAGhD,MAAyB,OAAlBrD,KAAKP,MAAM4D,KAAY,UAAU,gB,+BAGxC,IAAMA,EAAOrD,KAAKP,MAAM4D,KACxB,OACI,yBAAKzC,GAAG,OACJ,yBAAKV,UAAU,uDACX,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,eAAeyE,KAAK,KAAK3E,KAAK6F,aAC3C,4BAAQ3F,UAAU,oBAAqBW,QAASb,KAAK8F,iBAAiBxF,KAAKN,OAA0B,OAAlBA,KAAKP,MAAM4D,KAAY,KAAK,OAEnH,yBAAKnD,UAAU,OACX,yBAAKA,UAAU,OACX,4BAAKF,KAAK6F,YAAV,QACA,kBAAC,EAAD,CAAYxC,KAAMA,IAClB,kBAAC,EAAD,CAAmBA,KAAMA,Y,GA1BnCS,IAAMC,WCMJgC,QACW,cAA7BzG,OAAO0G,SAASC,UAEe,UAA7B3G,OAAO0G,SAASC,UAEhB3G,OAAO0G,SAASC,SAASC,MACvB,2D,MCZN9G,EAAQ,IAGR+G,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5E,QAAQ4E,MAAMA,EAAMjF,c","file":"static/js/main.b3cc6507.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Encryption.css';\r\nconst openpgp = require('openpgp'); // use as CommonJS, AMD, ES6 module or via window.openpgp\r\nconst $ = window.$;\r\n\r\nclass Encryption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pubDisabled:false,\r\n            privDisabled: false,\r\n            encryptedData:null,\r\n            decryptedData:null,\r\n            input:null,\r\n            key:null};\r\n    }\r\n    handlePubClick() {\r\n        this.setState( {pubDisabled: !this.state.pubDisabled})\r\n    }\r\n    handlePrivClick() {\r\n        this.setState( {privDisabled: !this.state.privDisabled} )\r\n    }\r\n    disabledPubInput(){\r\n        if(this.state.pubDisabled){\r\n            return (\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\"\r\n                               onPaste={this.handleChange.bind(this) }\r\n                               onChange={ this.handleChange.bind(this) }\r\n                               className=\"form-control\"\r\n                               placeholder={this.langPublicKey()}\r\n                               aria-describedby=\"button-addon4\" disabled/>\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <button className=\"btn btn-outline-secondary\"  onClick={this.handlePubClick.bind(this)}>{this.langSave()}</button>\r\n                        </div>\r\n                    </div>\r\n             )\r\n        }else{\r\n            return (\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\"\r\n                               onPaste={this.handleChange.bind(this) }\r\n                               onChange={ this.handleChange.bind(this) }\r\n                               className=\"form-control\"\r\n                               placeholder={this.langPublicKey()}\r\n                               aria-describedby=\"button-addon4\"/>\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <button className=\"btn btn-outline-secondary\"  onClick={this.handlePubClick.bind(this)} type=\"button\">{this.langSave()}</button>\r\n                        </div>\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n    disabledPrivInput(){\r\n        if(this.state.privDisabled){\r\n            return(\r\n                <div className=\"input-group mb-5\">\r\n\r\n                    <input type=\"text\"\r\n                           id=\"disabledTextInput\"\r\n                           onPaste={this.handleChange.bind(this) }\r\n                           onChange={this.handleChange.bind(this) }\r\n                           className=\"form-control\"\r\n                           placeholder={this.langPrivateKey()}\r\n                           aria-describedby=\"button-addon5\" disabled/>\r\n                    <div className=\"input-group-append\" id=\"button-addon5\">\r\n                        <button className=\"btn btn-outline-secondary\"  onClick={this.handlePrivClick.bind(this)} type=\"button\">{this.langSave()}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"input-group mb-5\">\r\n                    <input type=\"text\"\r\n                           id=\"disabledTextInput\"\r\n                           onPaste={this.handleChange.bind(this) }\r\n                           onChange={this.handleChange.bind(this) }\r\n                           className=\"form-control\"\r\n                           placeholder={this.langPrivateKey()}\r\n                           aria-describedby=\"button-addon5\"/>\r\n                    <div className=\"input-group-append\" id=\"button-addon5\">\r\n                        <button className=\"btn btn-outline-secondary\"  onClick={this.handlePrivClick.bind(this)} type=\"button\">{this.langSave()}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n    async decryptData(){\r\n        try {\r\n            await openpgp.initWorker({path: 'openpgp.worker.js'}); // set the relative web worker path\r\n\r\n            const unArmoredKeyNoSpace = this.state.key.substr(96, 743).replace(/\\s+/g, '\\n');\r\n            const unArmoredTextNoSpace = this.state.encryptedData.trim().substr(86);\r\n\r\n            // put keys in backtick (``) to avoid errors caused by spaces or tabs\r\n            //const privateKeyArmored = this.state.key.trim();\r\n\r\n            const armoredKey = `-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n    Version: OpenPGP.js v4.10.7\r\n    Comment: https://openpgpjs.org\r\n    ` + '\\n' + unArmoredKeyNoSpace + '\\n' + '-----END PGP PUBLIC KEY BLOCK-----';\r\n\r\n            const armoredMsg = `-----BEGIN PGP MESSAGE-----\r\n    Version: OpenPGP.js v4.10.7\r\n    Comment: https://openpgpjs.org` + '\\n' + unArmoredTextNoSpace;\r\n\r\n            const privateKeyArmored = armoredKey;\r\n\r\n            // encrypted private key\r\n            const passphrase = \"\"; // what the private key is encrypted with\r\n\r\n            const {keys: [privateKey]} = await openpgp.key.readArmored(privateKeyArmored);\r\n            //await privateKey.decrypt(passphrase);\r\n\r\n            const {data: decrypted} = await openpgp.decrypt({\r\n                message: await openpgp.message.readArmored(armoredMsg),              // parse armored message\r\n                privateKeys: [privateKey]                                           // for decryption\r\n            });\r\n            this.setState({decryptedData: decrypted});\r\n            this.setState({\r\n                input: \"\",\r\n                encryptedData: \"\"\r\n            });\r\n        }catch(e){\r\n            console.log(e)\r\n        }\r\n    }\r\n    async encryptData(){\r\n        try {\r\n\r\n\r\n            await openpgp.initWorker({path: 'openpgp.worker.js'}); // set the relative web worker path\r\n\r\n\r\n            const unArmoredKeyNoSpace = this.state.key.substr(95, 641).replace(/\\s+/g, '\\n');\r\n\r\n            const publicKeyArmored = `-----BEGIN PGP PUBLIC KEY BLOCK-----\r\n    Version: OpenPGP.js v4.10.7\r\n    Comment: https://openpgpjs.org\r\n    ` + unArmoredKeyNoSpace + '\\n' + '-----END PGP PUBLIC KEY BLOCK-----';\r\n\r\n            const passphrase = \"\"; // what the private key is encrypted with\r\n\r\n            const encrypted = await openpgp.encrypt({\r\n                message: openpgp.message.fromText(this.state.decryptedData.trim()),                 // input as Message object\r\n                publicKeys: (await openpgp.key.readArmored(publicKeyArmored)).keys[0] // for encryption\r\n            });\r\n            this.setState({encryptedData: encrypted.data});\r\n            this.setState({\r\n                input: \"\",\r\n                decryptedData: \"\"\r\n            });\r\n        }catch(e){\r\n\r\n            $('.modal').show();\r\n            console.log(e.toString())\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        if(e.target.id===\"dataTextField\"&&e.target.value!==\"\"){\r\n            this.setState({ input: e.target.value });\r\n        }else if(e.target.id===\"disabledTextInput\"&&e.target.value!==\"\"){\r\n            this.setState({key:e.target.value})\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n    }\r\n    handleClick(e) {\r\n\r\n        if(e.target.value===\"Decrypt\"){\r\n            this.setState({encryptedData:this.state.input})\r\n        }else if(e.target.value===\"Encrypt\"){\r\n            this.setState({decryptedData:this.state.input})\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n    }\r\n    textAreaClick(e){\r\n        if(e.target.value===\"Encrypt\"&&this.state.input!==null&&this.state.key!==null){\r\n            this.handleClick(e);\r\n            this.encryptData();\r\n        }else if(e.target.value===\"Decrypt\"&&this.state.input!==null&&this.state.key!==null){\r\n            this.handleClick(e);\r\n            this.decryptData();\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n\r\n    }\r\n    showResults(){\r\n        if(this.state.input===\"\"){\r\n            if(this.state.encryptedData===\"\"){\r\n                return (<div className=\"h6\"><small>{this.state.decryptedData.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>);\r\n            }else if(this.state.decryptedData===\"\"){\r\n                return (<div className=\"h6\"><small>{this.state.encryptedData.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>);\r\n            }\r\n        }\r\n    }\r\n    langPublicKey(){\r\n        return this.props.lang===\"EN\"?\"Public Key\":\"Clé Publique\";\r\n    }\r\n    langPrivateKey(){\r\n        return this.props.lang===\"EN\"?\"Private Key\":\"Clé Privée\";\r\n    }\r\n\r\n    langSave(){\r\n        return this.props.lang===\"EN\"?\"Save\":\"Sauver\";\r\n    }\r\n    langEncrypt(){\r\n        return this.props.lang===\"EN\"?\"Encrypt\":\"Crypter\";\r\n    }\r\n    langDecrypt(){\r\n        return this.props.lang===\"EN\"?\"Decrypt\":\"Décrypter\";\r\n    }\r\n    langMesssageTo(){\r\n        return this.props.lang===\"EN\"?\"Message To Encode/Decode\":\"Message à Encoder/Décoder\";\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                {this.disabledPubInput()}\r\n                {this.disabledPrivInput()}\r\n\r\n                {this.showResults()}\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\" onChange={ this.handleChange.bind(this) } placeholder={this.langMesssageTo()}  id=\"dataTextField\" rows=\"3\"></textarea>\r\n                    <div className=\"m-3\">\r\n                        <input className=\"btn btn-outline-secondary mx-2\" onClick={this.textAreaClick.bind(this)} type=\"submit\" value={this.langEncrypt()}></input>\r\n                        <input className=\"btn btn-outline-secondary mx-2\" onClick={this.textAreaClick.bind(this)} type=\"submit\" value={this.langDecrypt()}></input>\r\n                    </div>\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Encryption;\r\n","import React from \"react\";\r\nimport * as openpgp from \"openpgp\";\r\nimport './EncryptCreateKeys.css';\r\n\r\n\r\nclass EncryptCreateKeys extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: true,\r\n            pubKey:\"\",\r\n            privKey:\"\",\r\n            name:\"Jon Smith\",\r\n            email:\"jon@example.com\",\r\n            password:\"\"};\r\n    }\r\n    handleGameClik() {\r\n        this.setState( {disabled: !this.state.disabled} )\r\n    }\r\n    async createKeyPair(){\r\n        if(this.state.pubKey===\"\"){\r\n\r\n            var { privateKeyArmored, publicKeyArmored, revocationCertificate } = await openpgp.generateKey({\r\n                userIds: [{ name: this.state.name, email: this.state.email }], // you can pass multiple user IDs\r\n                curve:'p256',\r\n                passphrase: this.state.password           // protects the private key\r\n            });\r\n\r\n            this.setState({privKey:privateKeyArmored});\r\n            this.setState({pubKey:publicKeyArmored});\r\n\r\n            return {privKey:privateKeyArmored,pubKey:publicKeyArmored}\r\n        }else{\r\n            this.setState({pubKey:\"\"});\r\n            this.setState({privKey:\"\"});\r\n        }\r\n    }\r\n    langKey(){\r\n        return this.props.lang===\"EN\"?\"Key\":\"Clé\";\r\n    }\r\n    langPublicKey(){\r\n        return this.props.lang===\"EN\"?\"Public Key\":\"Clé Publique\";\r\n    }\r\n    langPrivateKey(){\r\n        return this.props.lang===\"EN\"?\"Private Key\":\"Clé Privée\";\r\n    }\r\n    langGenerate(){\r\n        return this.props.lang===\"EN\"?\"Generate\":\"Produire\";\r\n    }\r\n    langCreate(){\r\n        return this.props.lang===\"EN\"?\"Create\":\"Créer\";\r\n    }\r\n    langCanShare(){\r\n        return this.props.lang===\"EN\"?\"Can Share\":\"Peut Partager\";\r\n    }\r\n    langKeepSafe(){\r\n        return this.props.lang===\"EN\"?\"Keep Safe\":\"Gardez en Sécurité\";\r\n    }\r\n    langLoading(){\r\n        return this.props.lang===\"EN\"?\"Loading\":\"Chargement\";\r\n    }\r\n    handleChange(e) {\r\n        if(e.target.id===\"name\"&&e.target.value!==\"\"){\r\n            this.setState({ name: e.target.value });\r\n        }else if(e.target.id===\"email\"&&e.target.value!==\"\"){\r\n            this.setState({email:e.target.value})\r\n        }else if(e.target.id===\"password\"&&e.target.value!==\"\"){\r\n            this.setState({password:e.target.value})\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n    }\r\n    langPassword(){\r\n        return this.props.lang===\"EN\"?\"Password\":\"Mot de passe\";\r\n    }\r\n    langName(){\r\n        return this.props.lang===\"EN\"?\"Name\":\"Nom\";\r\n    }\r\n    langExpert(){\r\n        return this.props.lang===\"EN\"?\"Expert Options(Will not work here!)\":\"Options Expert (Ne fonctionnera pas ici!)\";\r\n    }\r\n    langOptions(){\r\n        return this.props.lang===\"EN\"?\"Expert Options\":\"Options d'experts\";\r\n    }\r\n    langFillIn(){\r\n        return this.props.lang===\"EN\"?\"(Fill in then generate)\":\"(Remplissez puis générez)\";\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container my-5\">\r\n                <p>\r\n                    <a className=\"btn btn-dark\" data-toggle=\"collapse\" href=\"#multiCollapseExample1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1\">{this.langCreate()} {this.langKey()}s</a>\r\n                </p>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"collapse\" id=\"multiCollapseExample1\">\r\n                            <div className=\"card card-body bg-dark\">\r\n\r\n                                <a role=\"button\" onClick = {()=>{this.handleGameClik.bind(this);this.createKeyPair();}} data-toggle=\"collapse\" className=\"btn btn-secondary btn-sm m-1\" aria-expanded=\"false\" aria-controls=\"keysCollapse\" href=\"#keysCollapse\">{this.langGenerate()} {this.langKey()}</a>\r\n                                <a role=\"button\" onClick = {this.handleGameClik.bind(this)} data-toggle=\"collapse\" className=\"btn btn-secondary btn-sm m-1\" aria-expanded=\"false\" aria-controls=\"expertCollapse\" href=\"#expertCollapse\">{this.langOptions()} {this.langFillIn()}</a>\r\n\r\n\r\n                                <div className=\"my-3 mx-3 collapse shadow text-center\" id=\"expertCollapse\" >\r\n                                    <a>{this.langExpert()}</a>\r\n                                    <br/>\r\n                                    <input type=\"text\"\r\n                                           onPaste={this.handleChange.bind(this) }\r\n                                           onChange={ this.handleChange.bind(this) }\r\n                                           className=\"form-control w-50 m-2\"\r\n                                           placeholder={this.langName()}\r\n                                            id=\"name\"/>\r\n                                    <input type=\"text\"\r\n                                           onPaste={this.handleChange.bind(this) }\r\n                                           onChange={ this.handleChange.bind(this) }\r\n                                           className=\"form-control w-50 m-2\"\r\n                                           placeholder=\"E-mail\"\r\n                                           id=\"email\"/>\r\n                                    <input type=\"text\"\r\n                                           onPaste={this.handleChange.bind(this) }\r\n                                           onChange={ this.handleChange.bind(this) }\r\n                                           className=\"form-control w-50 m-2\"\r\n                                           placeholder={this.langPassword()}\r\n                                           id=\"password\"/>\r\n                                </div>\r\n\r\n\r\n                                <a className={(this.state.privKey===\"\"?\"invisible\":\"\")} >{this.langPrivateKey()} ({this.langKeepSafe()}!):</a>\r\n                                <div className=\"my-3 mx-3 collapse shadow\" id=\"keysCollapse\" >\r\n\r\n                                    <div className={(this.state.privKey==null?\"\":\"d-none\")} >\r\n                                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"h6\"><small>{this.state.privKey.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>\r\n                                </div>\r\n\r\n                                <a className={(this.state.privKey===\"\"?\"invisible\":\"\")} >{this.langPublicKey()} ({this.langCanShare()}!):</a>\r\n                                <div className=\"my-3 mx-3 collapse shadow\" id=\"keysCollapse\">\r\n\r\n                                    <div className={(this.state.privKey==null?\"\":\"d-none\")} >\r\n                                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                                            <span className=\"sr-only\">{this.langLoading()}...</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"h6\"><small>{this.state.pubKey.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EncryptCreateKeys;","import React from 'react';\r\nimport './App.css';\r\nimport Encryption from \"./components/Encryption\";\r\nimport EncryptCreateKeys from \"./components/EncryptCreateKeys\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lang: \"EN\"\r\n        };\r\n    }\r\n    handleLangSwitch(e){\r\n        this.setState({lang:this.state.lang===\"EN\"?\"FR\":\"EN\"})\r\n    }\r\n    langTitle(){\r\n        return this.state.lang===\"EN\"?\"MyVault\":\"VoûteMoi\";\r\n    }\r\n    render() {\r\n        const lang = this.state.lang;\r\n        return (\r\n            <div id=\"App\">\r\n                <div className=\"content container-fluid pt-5 text-center App-header\">\r\n                    <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                        <a className=\"navbar-brand\" href=\"/\">{this.langTitle()}</a>\r\n                        <button className=\"btn btn-secondary\"  onClick={this.handleLangSwitch.bind(this)}>{this.state.lang===\"EN\"?\"EN\":\"FR\"}</button>\r\n                    </nav>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h1>{this.langTitle()} PGP</h1>\r\n                            <Encryption lang={lang}/>\r\n                            <EncryptCreateKeys lang={lang}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nrequire('bootstrap');\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}