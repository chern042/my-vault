{"version":3,"sources":["components/Encryption.js","components/EncryptCreateKeys.js","App.js","serviceWorker.js","index.js"],"names":["openpgp","require","$","window","Encryption","props","state","pubDisabled","privDisabled","encryptedData","decryptedData","input","privKey","pubKey","errorType","this","setState","className","type","id","onPaste","handleChange","bind","onChange","placeholder","langPublicKey","aria-describedby","disabled","onClick","handlePubClick","langSave","langPrivateKey","handlePrivClick","initWorker","path","unArmoredKeyNoSpace","substr","replace","unArmoredTextNoSpace","trim","armoredMsg","privateKeyArmored","key","readArmored","keys","privateKey","message","privateKeys","decrypt","decrypted","data","modal","console","log","toString","publicKeyArmored","fromText","publicKeys","encrypt","encrypted","e","target","value","encryptData","decryptData","split","map","i","lang","errorModalEn","errorModalFr","data-backdrop","data-keyboard","tabIndex","role","aria-labelledby","aria-hidden","langOops","data-dismiss","aria-label","langClose","errorModalChoose","disabledPubInput","disabledPrivInput","showResults","langMesssageTo","rows","textAreaClick","langEncrypt","langDecrypt","React","Component","EncryptCreateKeys","name","email","password","expertOpen","attr","createKeyPair","userIds","curve","passphrase","revocationCertificate","val","data-toggle","href","aria-expanded","aria-controls","langCreate","langKey","clearExpert","langOptions","langFillIn","langName","onInvalid","langPassword","langWorkHere","langExpertHelp","handleGameClik","langGenerate","langKeepSafe","langCanShare","langLoading","App","newName","langTitle","handleLangSwitch","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.dd3ff50b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Encryption.css';\r\nconst openpgp = require('openpgp'); // use as CommonJS, AMD, ES6 module or via window.openpgp\r\nconst $ = window.$;\r\n\r\nclass Encryption extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pubDisabled:false,\r\n            privDisabled: false,\r\n            encryptedData:null,\r\n            decryptedData:null,\r\n            input:null,\r\n            privKey:null,\r\n            pubKey:null,\r\n            errorType:\"\"};\r\n    }\r\n    handlePubClick() {\r\n\r\n        this.setState( {pubDisabled: !this.state.pubDisabled})\r\n    }\r\n    handlePrivClick() {\r\n        this.setState( {privDisabled: !this.state.privDisabled} )\r\n    }\r\n    disabledPubInput(){\r\n        if(this.state.pubDisabled){\r\n            return (\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\"\r\n                               id=\"disabledTextInputPub\"\r\n                               onPaste={this.handleChange.bind(this) }\r\n                               onChange={ this.handleChange.bind(this) }\r\n                               className=\"form-control\"\r\n                               placeholder={this.langPublicKey()}\r\n                               aria-describedby=\"button-addon4\" disabled/>\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <button className=\"btn btn-outline-secondary\"  onClick={this.handlePubClick.bind(this)}>{this.langSave()}</button>\r\n                        </div>\r\n                    </div>\r\n             )\r\n        }else{\r\n            return (\r\n                    <div className=\"input-group mb-3\">\r\n                        <input type=\"text\"\r\n                               id=\"disabledTextInputPub\"\r\n                               onPaste={this.handleChange.bind(this) }\r\n                               onChange={ this.handleChange.bind(this) }\r\n                               className=\"form-control\"\r\n                               placeholder={this.langPublicKey()}\r\n                               aria-describedby=\"button-addon4\"/>\r\n                        <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            <button className=\"btn btn-outline-secondary\" onClick={this.handlePubClick.bind(this)} >{this.langSave()}</button>\r\n                        </div>\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n    disabledPrivInput(){\r\n        if(this.state.privDisabled){\r\n            return(\r\n                <div className=\"input-group mb-5\">\r\n\r\n                    <input type=\"text\"\r\n                           id=\"disabledTextInputPriv\"\r\n                           onPaste={this.handleChange.bind(this) }\r\n                           onChange={this.handleChange.bind(this) }\r\n                           className=\"form-control\"\r\n                           placeholder={this.langPrivateKey()}\r\n                           aria-describedby=\"button-addon5\" disabled/>\r\n                    <div className=\"input-group-append\" id=\"button-addon5\">\r\n                        <button className=\"btn btn-outline-secondary\"  onClick={this.handlePrivClick.bind(this)} type=\"button\">{this.langSave()}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className=\"input-group mb-5\">\r\n                    <input type=\"text\"\r\n                           id=\"disabledTextInputPriv\"\r\n                           onPaste={this.handleChange.bind(this) }\r\n                           onChange={this.handleChange.bind(this) }\r\n                           className=\"form-control\"\r\n                           placeholder={this.langPrivateKey()}\r\n                           aria-describedby=\"button-addon5\"/>\r\n                    <div className=\"input-group-append\" id=\"button-addon5\">\r\n                        <button className=\"btn btn-outline-secondary\"  onClick={this.handlePrivClick.bind(this)} type=\"button\">{this.langSave()}</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n\r\n        }\r\n    }\r\n    async decryptData(){\r\n        try {\r\n            await openpgp.initWorker({path: 'openpgp.worker.js'}); // set the relative web worker path\r\n\r\n            const unArmoredKeyNoSpace = this.state.privKey.substr(96, 743).replace(/\\s+/g, '\\n');\r\n\r\n            const unArmoredTextNoSpace = this.state.encryptedData.trim().substr(86)!=\"\"?this.state.encryptedData.trim().substr(86):this.state.input.trim().substr(86);\r\n\r\n            // put keys in backtick (``) to avoid errors caused by spaces or tabs\r\n            //const privateKeyArmored = this.state.key.trim();\r\n\r\n            const armoredKey = `-----BEGIN PGP PUBLIC KEY BLOCK-----\\nVersion: OpenPGP.js v4.10.7\\nComment: https://openpgpjs.org\\n` + unArmoredKeyNoSpace + '\\n' + '-----END PGP PUBLIC KEY BLOCK-----';\r\n\r\n            const armoredMsg = `-----BEGIN PGP MESSAGE-----\\nVersion: OpenPGP.js v4.10.7\\nComment: https://openpgpjs.org` + '\\n' + unArmoredTextNoSpace+`\\n-----END PGP MESSAGE----- `;\r\n\r\n            const privateKeyArmored = armoredKey;\r\n\r\n            // encrypted private key\r\n            const passphrase = \"\"; // what the private key is encrypted with\r\n\r\n            const {keys: [privateKey]} = await openpgp.key.readArmored(privateKeyArmored);\r\n            //await privateKey.decrypt(passphrase);\r\n\r\n            const {data: decrypted} = await openpgp.decrypt({\r\n                message: await openpgp.message.readArmored(armoredMsg),              // parse armored message\r\n                privateKeys: [privateKey]                                           // for decryption\r\n            });\r\n            this.setState({decryptedData: decrypted});\r\n            this.setState({\r\n                input: \"\",\r\n                encryptedData: \"\"\r\n            });\r\n        }catch(e){\r\n            this.props.onChange(\"Decrypt\")\r\n            $('.modal').modal('show');\r\n            console.log(e.toString())\r\n        }\r\n    }\r\n    async encryptData(){\r\n        try {\r\n\r\n\r\n            await openpgp.initWorker({path: 'openpgp.worker.js'}); // set the relative web worker path\r\n\r\n\r\n            const unArmoredKeyNoSpace = this.state.pubKey.substr(95, 641).replace(/\\s+/g, '\\n');\r\n            console.log('ug',unArmoredKeyNoSpace)\r\n\r\n            const publicKeyArmored = `-----BEGIN PGP PUBLIC KEY BLOCK-----\\nVersion: OpenPGP.js v4.10.7\\nComment: https://openpgpjs.org\\n` + unArmoredKeyNoSpace + '\\n' + '-----END PGP PUBLIC KEY BLOCK-----';\r\n            console.log('ug',publicKeyArmored)\r\n\r\n            const passphrase = \"\"; // what the private key is encrypted with\r\n            var test = await openpgp.key.readArmored(publicKeyArmored)\r\n\r\n            const encrypted = await openpgp.encrypt({\r\n                message: openpgp.message.fromText(this.state.decryptedData.trim()!=\"\"?this.state.decryptedData.trim():this.state.input.trim()),                 // input as Message object\r\n                publicKeys: (await openpgp.key.readArmored(publicKeyArmored)).keys[0] // for encryption\r\n            });\r\n            this.setState({encryptedData: encrypted.data});\r\n            this.setState({\r\n                input: \"\",\r\n                decryptedData: \"\"\r\n            });\r\n        }catch(e){\r\n            this.props.onChange(\"Encrypt\")\r\n            $('.modal').modal('show');\r\n            console.log(e.toString())\r\n        }\r\n    }\r\n    handleChange(e) {\r\n        if(e.target.id===\"dataTextField\"&&e.target.value!==\"\"){\r\n            this.setState({ input: e.target.value });\r\n        }else if(e.target.id===\"disabledTextInputPriv\"&&e.target.value!==\"\"){\r\n            this.setState({privKey:e.target.value})\r\n        }else if(e.target.id===\"disabledTextInputPub\"&&e.target.value!==\"\"){\r\n            this.setState({pubKey:e.target.value})\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n    }\r\n    textAreaClick(e){\r\n        console.log(e)\r\n        console.log(e.target)\r\n        console.log('input:',this.state.input,\"key:\",this.state.key)\r\n        //this.props.errorType = 'test' +\r\n        this.props.onChange('My New name');\r\n        console.log('efed',this.props)\r\n\r\n        if(e.target.value===\"Encrypt\"&&this.state.input!==null){\r\n            this.setState({decryptedData:this.state.input})\r\n            //this.handleClick(e);\r\n            this.encryptData();\r\n        }else if(e.target.value===\"Decrypt\"&&this.state.input!==null){\r\n            this.setState({encryptedData:this.state.input})\r\n            //this.handleClick(e);\r\n            this.decryptData();\r\n        }else{\r\n            this.props.onChange(\"Empty\")\r\n            $('.modal').modal('show');\r\n\r\n        }\r\n\r\n    }\r\n    showResults(){\r\n        if(this.state.input===\"\"){\r\n            if(this.state.encryptedData===\"\"){\r\n                return (<div className=\"h6 text-success\"><small>{this.state.decryptedData.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>);\r\n            }else if(this.state.decryptedData===\"\"){\r\n                return (<div className=\"h6 text-success\"><small>{this.state.encryptedData.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>);\r\n            }\r\n        }\r\n    }\r\n    langPublicKey(){\r\n        return this.props.lang===\"EN\"?\"Public Key\":\"Clé Publique\";\r\n    }\r\n    langPrivateKey(){\r\n        return this.props.lang===\"EN\"?\"Private Key\":\"Clé Privée\";\r\n    }\r\n\r\n    langSave(){\r\n        return this.props.lang===\"EN\"?\"Save\":\"Sauver\";\r\n    }\r\n    langEncrypt(){\r\n        return this.props.lang===\"EN\"?\"Encrypt\":\"Crypter\";\r\n    }\r\n    langDecrypt(){\r\n        return this.props.lang===\"EN\"?\"Decrypt\":\"Décrypter\";\r\n    }\r\n    langMesssageTo(){\r\n        return this.props.lang===\"EN\"?\"Message To Encode/Decode\":\"Message à Encoder/Décoder\";\r\n    }\r\n    errorModalEn() {\r\n        if(this.props.errorType===\"Encrypt\"){\r\n            return \"Sorry, something is wrong with your public key!\";\r\n        }else if(this.props.errorType===\"Decrypt\"){\r\n            return \"Sorry, something is wrong with your private key or message!\"\r\n        }else if(this.props.errorType===\"Email\"){\r\n            return \"Sorry, your E-mail is incorrect!\"\r\n        }else if(this.props.errorType===\"Empty\"){\r\n            return \"Sorry, it appears like one or more of your fields are empty!\"\r\n        }else{\r\n            return \"Sorry, there is some error going on!\"\r\n        }\r\n    }\r\n    errorModalFr(){\r\n        if(this.props.errorType===\"Encrypt\"){\r\n            return \"Désolé, il y a un problème avec votre clé publique!\";\r\n        }else if(this.props.errorType===\"Decrypt\"){\r\n            return \"Désolé, il y a un problème avec votre clé privée ou votre message!\"\r\n        }else if(this.props.errorType===\"Email\"){\r\n            return \"Désolé, votre E-mail est incorrect!!\"\r\n        }else if(this.props.errorType===\"Empty\"){\r\n            return \"Désolé, il semble qu'un ou plusieurs de vos champs soient vides!\"\r\n        }else{\r\n            return \"Désolé, une erreur est en cours!\"\r\n        }\r\n    }\r\n    errorModalChoose(){\r\n        if(this.props.lang===\"EN\"){\r\n            return this.errorModalEn()\r\n        }else{\r\n            return this.errorModalFr()\r\n        }\r\n    }\r\n    langOops(){\r\n        return this.props.lang===\"EN\"?\"Oops! Looks like something went wrong...\":\"Oups! Il semble que quelque chose s'est mal passé...\";\r\n    }\r\n    langClose(){\r\n        return this.props.lang===\"EN\"?\"Close\":\"Ferme\";\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"modal fade\" id=\"staticBackdrop\" data-backdrop=\"static\" data-keyboard=\"false\"\r\n                     tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title text-danger font-weight-bold\" id=\"staticBackdropLabel\">{this.langOops()}</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label={this.langClose()}>\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body text-dark\">\r\n                                <h4>{this.errorModalChoose()}</h4>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {this.disabledPubInput()}\r\n                {this.disabledPrivInput()}\r\n\r\n                {this.showResults()}\r\n                <div className=\"form-group\">\r\n                    <textarea className=\"form-control\" onChange={ this.handleChange.bind(this) } placeholder={this.langMesssageTo()}  id=\"dataTextField\" rows=\"3\"></textarea>\r\n                    <div className=\"m-3\">\r\n                        <input className=\"btn btn-outline-secondary mx-2\"   onClick={this.textAreaClick.bind(this)} type=\"submit\" value={this.langEncrypt()}></input>\r\n                        <input className=\"btn btn-outline-secondary mx-2\" onClick={this.textAreaClick.bind(this)} type=\"submit\" value={this.langDecrypt()}></input>\r\n                    </div>\r\n                    </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Encryption;\r\n","import React from \"react\";\r\nimport * as openpgp from \"openpgp\";\r\nimport './EncryptCreateKeys.css';\r\nconst $ = window.$;\r\n\r\n\r\nclass EncryptCreateKeys extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            disabled: false,\r\n            pubKey:\"\",\r\n            privKey:\"\",\r\n            name:\"Jon Smith\",\r\n            email:\"jon@example.com\",\r\n            password:\"\"};\r\n\r\n    }\r\n    handleGameClik(e) {\r\n        var expertOpen = $('#expertBtn').attr('aria-expanded')\r\n        this.setState( {disabled: !this.state.disabled} )\r\n        if(expertOpen===\"false\"){\r\n            this.setState( {\r\n                name: \"Jon Smith\",\r\n                email: \"jon@example.com\",\r\n                password:\"\"})\r\n\r\n        }\r\n        this.createKeyPair();\r\n\r\n    }\r\n    async createKeyPair(){\r\n        console.log('making with: ', this.state.name, this.state.email)\r\n        try{\r\n            if(!this.state.disabled){\r\n\r\n                var { privateKeyArmored, publicKeyArmored, revocationCertificate } = await openpgp.generateKey({\r\n                    userIds: [{ name: this.state.name, email: this.state.email }], // you can pass multiple user IDs\r\n                    curve:'p256',\r\n                    passphrase: this.state.password           // protects the private key\r\n                });\r\n\r\n                this.setState({privKey:privateKeyArmored});\r\n                this.setState({pubKey:publicKeyArmored});\r\n\r\n                return {privKey:privateKeyArmored,pubKey:publicKeyArmored}\r\n            }else{\r\n                console.log('do nothing')\r\n                this.setState({pubKey:\"\"});\r\n                this.setState({privKey:\"\"});\r\n            }\r\n        }catch (e) {\r\n            this.props.onChange('Email');\r\n            $('.modal').modal('show');\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    langKey(){\r\n        return this.props.lang===\"EN\"?\"Key\":\"Clé\";\r\n    }\r\n    langPublicKey(){\r\n        return this.props.lang===\"EN\"?\"Public Key\":\"Clé Publique\";\r\n    }\r\n    langPrivateKey(){\r\n        return this.props.lang===\"EN\"?\"Private Key\":\"Clé Privée\";\r\n    }\r\n    langGenerate(){\r\n        return this.props.lang===\"EN\"?\"Generate\":\"Générer\";\r\n    }\r\n    langCreate(){\r\n        return this.props.lang===\"EN\"?\"Create\":\"Créer\";\r\n    }\r\n    langCanShare(){\r\n        return this.props.lang===\"EN\"?\"Can Share\":\"Peut Partager\";\r\n    }\r\n    langKeepSafe(){\r\n        return this.props.lang===\"EN\"?\"Keep Safe\":\"Gardez en Sécurité\";\r\n    }\r\n    langLoading(){\r\n        return this.props.lang===\"EN\"?\"Loading\":\"Chargement\";\r\n    }\r\n    handleChange(e) {\r\n        console.log(e.target.value)\r\n        if(e.target.id===\"name\"){\r\n            if(e.target.value===\"\"){\r\n                this.setState({ name: \"Jon Smith\" });\r\n            }else{\r\n                this.setState({ name: e.target.value });\r\n            }\r\n        }else if(e.target.id===\"email\"){\r\n            if(e.target.value===\"\"){\r\n                this.setState({email: \"jon@example.com\"})\r\n            }else{\r\n                this.setState({email:e.target.value})\r\n            }\r\n        }else if(e.target.id===\"password\"){\r\n            this.setState({password:e.target.value})\r\n        }else{\r\n            console.log('do nothing')\r\n        }\r\n    }\r\n    langPassword(){\r\n        return this.props.lang===\"EN\"?\"Password\":\"Mot de passe\";\r\n    }\r\n    langName(){\r\n        return this.props.lang===\"EN\"?\"Name\":\"Nom\";\r\n    }\r\n    langExpert(){\r\n        return this.props.lang===\"EN\"?\"Expert Options\":\"Options Expert\";\r\n    }\r\n    langWorkHere(){\r\n        return this.props.lang===\"EN\"?\"Will not work here!\":\"Ne fonctionnera pas ici!\";\r\n    }\r\n    langOptions(){\r\n        return this.props.lang===\"EN\"?\"Expert Options\":\"Options d'experts\";\r\n    }\r\n    langFillIn(){\r\n        return this.props.lang===\"EN\"?\"Fill in, then click \\\"Generate\\\".\":\"Remplissez, puis cliquez sur \\\"Générer\\\".\";\r\n    }\r\n    langExpertHelp(){\r\n        return this.props.lang===\"EN\"?\"To generate keys with a password, please note that you will not be able to decode messages encoded with password-associated private keys. You are able to encrypt with a password-associated public key, but can not decrypt with the corresponding private key.\":\"Pour générer des clés avec un mot de passe, veuillez noter que vous ne pourrez pas décoder les messages encodés avec des clés privées associées à un mot de passe. Vous pouvez chiffrer avec une clé publique associée à un mot de passe, mais ne pouvez pas déchiffrer avec la clé privée correspondante.\";\r\n    }\r\n    clearExpert(){\r\n        var expertOpen = $('#expertBtn').attr('aria-expanded')\r\n        if(expertOpen===\"false\"){\r\n            $('#name').val(\"\");\r\n            $('#email').val(\"\");\r\n            $('#password').val(\"\");\r\n            this.setState({\r\n                name: \"Jon Smith\",\r\n                email: \"jon@example.com\",\r\n                password: \"\"\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container my-5\">\r\n\r\n                <p>\r\n                    <a className=\"btn btn-dark\"  data-toggle=\"collapse\" href=\"#multiCollapseExample1\" role=\"button\" aria-expanded=\"false\" aria-controls=\"multiCollapseExample1\">{this.langCreate()} {this.langKey()}s</a>\r\n                </p>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"collapse\" id=\"multiCollapseExample1\">\r\n                            <div className=\"card card-body bg-dark\">\r\n\r\n                                <a role=\"button\" id=\"expertBtn\" onClick={this.clearExpert.bind(this)} data-toggle=\"collapse\" className=\"btn btn-secondary btn-sm m-1\" aria-expanded=\"false\" aria-controls=\"expertCollapse\" href=\"#expertCollapse\">{this.langOptions()}</a>\r\n\r\n\r\n                                <div className=\"my-3 mx-3 collapse shadow text-center\" id=\"expertCollapse\" >\r\n                                    <a>{this.langFillIn()}</a>\r\n                                    <br/>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col mb-5\">\r\n                                            <div id=\"nameDiv\" className=\"d-flex justify-content-center\">\r\n                                                <input type=\"text\"\r\n                                                       onPaste={this.handleChange.bind(this) }\r\n                                                       onChange={ this.handleChange.bind(this) }\r\n                                                       className=\"form-control m-2\"\r\n                                                       placeholder={this.langName()}\r\n                                                        id=\"name\"/>\r\n                                            </div>\r\n                                            <div id=\"emailDiv\" className=\"d-flex justify-content-center\">\r\n                                                <input type=\"email\"\r\n                                                       onPaste={this.handleChange.bind(this) }\r\n                                                       onChange={ this.handleChange.bind(this) }\r\n                                                       className=\"form-control m-2\"\r\n                                                       placeholder=\"E-mail\"\r\n                                                       id=\"email\"\r\n                                                        onInvalid={()=>{$('.modal').modal('show')}}/>\r\n                                            </div>\r\n                                            <div id=\"passwordDiv\" className=\"d-flex justify-content-center\">\r\n                                                <input type=\"text\"\r\n                                                   onPaste={this.handleChange.bind(this) }\r\n                                                   onChange={ this.handleChange.bind(this) }\r\n                                                   className=\"form-control m-2\"\r\n                                                   placeholder={this.langPassword()}\r\n                                                   id=\"password\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col\">\r\n                                            <h3 className=\"text-danger font-weight-bold\">{this.langWorkHere()}!</h3>\r\n                                            <h5 className=\"text-left\">{this.langExpertHelp()}</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <a role=\"button\" id=\"genBtn\" onClick = {this.handleGameClik.bind(this)} data-toggle=\"collapse\" className=\"btn btn-secondary btn-sm m-1\" aria-expanded=\"false\" aria-controls=\"keysCollapse\" href=\"#keysCollapse\">{this.langGenerate()}</a>\r\n\r\n\r\n                                <a className={(this.state.privKey===\"\"?\"invisible\":\"\")} >{this.langPrivateKey()} ({this.langKeepSafe()}!):</a>\r\n                                <div className=\"my-3 mx-3 collapse shadow\" id=\"keysCollapse\" >\r\n\r\n                                    <div className={(this.state.privKey==null?\"\":\"d-none\")} >\r\n                                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                                            <span className=\"sr-only\">Loading...</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"h6\"><small>{this.state.privKey.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>\r\n                                </div>\r\n\r\n                                <a className={(this.state.privKey===\"\"?\"invisible\":\"\")} >{this.langPublicKey()} ({this.langCanShare()}!):</a>\r\n                                <div className=\"my-3 mx-3 collapse shadow\" id=\"keysCollapse\">\r\n\r\n                                    <div className={(this.state.privKey==null?\"\":\"d-none\")} >\r\n                                        <div className=\"spinner-border m-5\" role=\"status\">\r\n                                            <span className=\"sr-only\">{this.langLoading()}...</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"h6\"><small>{this.state.pubKey.split(\"\\n\").map((i,key) => {return <div key={key}>{i}</div>;})}</small></div>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EncryptCreateKeys;","import React from 'react';\r\nimport './App.css';\r\nimport Encryption from \"./components/Encryption\";\r\nimport EncryptCreateKeys from \"./components/EncryptCreateKeys\";\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lang: \"EN\",\r\n            errorType:\"None\"\r\n        };\r\n    }\r\n    handleLangSwitch(e){\r\n        this.setState({lang:this.state.lang===\"EN\"?\"FR\":\"EN\"})\r\n    }\r\n    langTitle(){\r\n        return this.state.lang===\"EN\"?\"MyVault\":\"VoûteMoi\";\r\n    }\r\n    onChange(newName) {\r\n        console.log('waa')\r\n        this.setState({ errorType: newName });\r\n    }\r\n    render() {\r\n        const lang = this.state.lang;\r\n        var errorType = this.state.errorType;\r\n        return (\r\n            <div id=\"App\">\r\n                <div className=\"content container-fluid pt-5 text-center App-header\">\r\n                    <nav className=\"navbar fixed-top navbar-dark bg-dark\">\r\n                        <a className=\"navbar-brand\" href=\"/\">{this.langTitle()}</a>\r\n                        <button className=\"btn btn-secondary\"  onClick={this.handleLangSwitch.bind(this)}>{this.state.lang===\"EN\"?\"EN\":\"FR\"}</button>\r\n                    </nav>\r\n                    <div className=\"row\">\r\n                        <div className=\"col\">\r\n                            <h1>{this.langTitle()} PGP</h1>\r\n                            <Encryption lang={lang} errorType={errorType} onChange={this.onChange.bind(this)}/>\r\n                            <EncryptCreateKeys lang={lang} errorType={errorType} onChange={this.onChange.bind(this)}/>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}